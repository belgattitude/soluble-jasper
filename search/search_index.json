{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PDF report generation with jasper reports from PHP What is Jasperreports ? JasperReports is a template based opensource reporting library popular amongst Java developers. It comes with a pretty decent visual designer Jasperstudio and supports an impressive list of features such as barcode, fonts, layout, pagination, page size, orientation, columns, precise text spacing / wrapping, charts, subreports, svg, translations... and allow creation of sophisticated reports. It's opinionated and requires to catch few principles, like report bands, parameters, datasources, subreports... What's the use case ? Whenever you need to achieve near pixel-perfect, semi-complex reports layouts that would simply make no sense to develop with pure-php or puppeteer / headless chrome based approaches. Think of a product catalog, a complex invoice, tracking labels... What is soluble-jasper ? soluble-jasper relies on a network based bridge to the JVM and allows to manipulate the report creation from the PHP side. Basically you just run the jrxml template designed with JasperStudio: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; use Soluble\\Jasper\\Exporter\\PDFExporter ; // Create a connection to the Jasper bridge. $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]) ); $report = new Report ( // Set the report template file /path/my_report.jrxml , // Param values that sent to the report template // i.e. textFieldExpression ![CDATA[$P{BookTitle}]] /textFieldExpression new ReportParams ([ BookTitle = Soluble Jasper , BookSubTitle = Generated on JVM with Jasper reports ]), // Set a database connection if you re using queries in your // report new JavaSqlConnection ( jdbc:mysql://localhost/my_db?user=user password=password , com.mysql.jdbc.Driver ) ); // Step 3: Export the report $pdfExporter = new PDFExporter ( $report , $reportRunner ); $pdfExporter - saveFile ( /path/my_report_output.pdf , [ // PDF metadata author = John Doe , title = My document ]); This approach have few drawbacks (the main one is having to install a bridge server running jasper report on the JVM) but offers a great level of flexibility and speed (bridged api, no cli, no startup time) . See comparison of alternatives . Features Report generation in PDF (other formats can be supported, open an issue) Datasources for JDBC, JSON and XML (url or filesystem) Support for PSR-7 responses (stream) Requirements PHP 7.1+ JasperBridge (see install) Java Alternatives JasperReport based JasperStarter A CLI to run jasper reports JasperServer PHP based FPDF , mpdf , tcpdf ... Others Convert HTML, Markdown, Office to PDF Gotenberg A Docker-powered stateless API for converting HTML, Markdown and Office documents to PDF Unoconv Coding standards and interop PSR 7 HTTP Message PSR 4 Autoloader PSR 3 Logger interface PSR 2 Coding Style Guide","title":"Introduction"},{"location":"#what-is-jasperreports","text":"JasperReports is a template based opensource reporting library popular amongst Java developers. It comes with a pretty decent visual designer Jasperstudio and supports an impressive list of features such as barcode, fonts, layout, pagination, page size, orientation, columns, precise text spacing / wrapping, charts, subreports, svg, translations... and allow creation of sophisticated reports. It's opinionated and requires to catch few principles, like report bands, parameters, datasources, subreports...","title":"What is Jasperreports ?"},{"location":"#whats-the-use-case","text":"Whenever you need to achieve near pixel-perfect, semi-complex reports layouts that would simply make no sense to develop with pure-php or puppeteer / headless chrome based approaches. Think of a product catalog, a complex invoice, tracking labels...","title":"What's the use case ?"},{"location":"#what-is-soluble-jasper","text":"soluble-jasper relies on a network based bridge to the JVM and allows to manipulate the report creation from the PHP side. Basically you just run the jrxml template designed with JasperStudio: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; use Soluble\\Jasper\\Exporter\\PDFExporter ; // Create a connection to the Jasper bridge. $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]) ); $report = new Report ( // Set the report template file /path/my_report.jrxml , // Param values that sent to the report template // i.e. textFieldExpression ![CDATA[$P{BookTitle}]] /textFieldExpression new ReportParams ([ BookTitle = Soluble Jasper , BookSubTitle = Generated on JVM with Jasper reports ]), // Set a database connection if you re using queries in your // report new JavaSqlConnection ( jdbc:mysql://localhost/my_db?user=user password=password , com.mysql.jdbc.Driver ) ); // Step 3: Export the report $pdfExporter = new PDFExporter ( $report , $reportRunner ); $pdfExporter - saveFile ( /path/my_report_output.pdf , [ // PDF metadata author = John Doe , title = My document ]); This approach have few drawbacks (the main one is having to install a bridge server running jasper report on the JVM) but offers a great level of flexibility and speed (bridged api, no cli, no startup time) . See comparison of alternatives .","title":"What is soluble-jasper ?"},{"location":"#features","text":"Report generation in PDF (other formats can be supported, open an issue) Datasources for JDBC, JSON and XML (url or filesystem) Support for PSR-7 responses (stream)","title":"Features"},{"location":"#requirements","text":"PHP 7.1+ JasperBridge (see install) Java","title":"Requirements"},{"location":"#alternatives","text":"","title":"Alternatives"},{"location":"#jasperreport-based","text":"JasperStarter A CLI to run jasper reports JasperServer","title":"JasperReport based"},{"location":"#php-based","text":"FPDF , mpdf , tcpdf ...","title":"PHP based"},{"location":"#others","text":"Convert HTML, Markdown, Office to PDF Gotenberg A Docker-powered stateless API for converting HTML, Markdown and Office documents to PDF Unoconv","title":"Others"},{"location":"#coding-standards-and-interop","text":"PSR 7 HTTP Message PSR 4 Autoloader PSR 3 Logger interface PSR 2 Coding Style Guide","title":"Coding standards and interop"},{"location":"05_install_jasper_server/","text":"Jasper install","title":"Jasper install"},{"location":"05_install_jasper_server/#jasper-install","text":"","title":"Jasper install"},{"location":"benchmarks/","text":"Benchmarks Early benchmarks for common operation (run on a laptop for now, will do soon on digitalocean). See tests/bench/simple_benchmarks.php . Jasper compile time and filling (internal) Benchmark name x1 x5 x10 Average Memory 00_report_mini.jrxml (compile) 43.03ms 179.05ms 347.55ms 35.60ms 18.97Kb 00_report_mini.jrxml (fill) 3.19ms 9.15ms 18.58ms 1.93ms 14.27Kb 01_report_default.jrxml (compile) 39.24ms 192.41ms 338.65ms 35.64ms 0.31Kb 01_report_default.jrxml (fill) 3.70ms 11.22ms 22.75ms 2.35ms 0.44Kb PDF exports Benchmark name x1 x5 x10 Average Memory 00_report_mini.jrxml (text-only) 38.74ms 3.76ms 8.58ms 3.19ms 0.79Kb 01_report_default.jrxml (text+png) 318.68ms 1,365.02ms 2,709.56ms 274.58ms 0.75Kb 06_report_barcodes.jrxml (barcodes) 123.81ms 323.71ms 630.51ms 67.38ms 0.75Kb Connection time: 3 ms","title":"Benchmarks"},{"location":"benchmarks/#benchmarks","text":"Early benchmarks for common operation (run on a laptop for now, will do soon on digitalocean). See tests/bench/simple_benchmarks.php .","title":"Benchmarks"},{"location":"benchmarks/#jasper-compile-time-and-filling-internal","text":"Benchmark name x1 x5 x10 Average Memory 00_report_mini.jrxml (compile) 43.03ms 179.05ms 347.55ms 35.60ms 18.97Kb 00_report_mini.jrxml (fill) 3.19ms 9.15ms 18.58ms 1.93ms 14.27Kb 01_report_default.jrxml (compile) 39.24ms 192.41ms 338.65ms 35.64ms 0.31Kb 01_report_default.jrxml (fill) 3.70ms 11.22ms 22.75ms 2.35ms 0.44Kb","title":"Jasper compile time and filling (internal)"},{"location":"benchmarks/#pdf-exports","text":"Benchmark name x1 x5 x10 Average Memory 00_report_mini.jrxml (text-only) 38.74ms 3.76ms 8.58ms 3.19ms 0.79Kb 01_report_default.jrxml (text+png) 318.68ms 1,365.02ms 2,709.56ms 274.58ms 0.75Kb 06_report_barcodes.jrxml (barcodes) 123.81ms 323.71ms 630.51ms 67.38ms 0.75Kb Connection time: 3 ms","title":"PDF exports"},{"location":"connection/","text":"Connect to the bridge ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ReportRunnerFactory ; $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperBridge/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter ); Use only one connection to the bridge ! Create a factory and use a DI container (PSR-11...).","title":"Connecting"},{"location":"connection/#connect-to-the-bridge","text":"?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ReportRunnerFactory ; $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperBridge/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter ); Use only one connection to the bridge ! Create a factory and use a DI container (PSR-11...).","title":"Connect to the bridge"},{"location":"datasources/","text":"Datasources Jasper reports supports multiple datasources for filling the report (see JRApi ) JavaSqlConnection Example using JavaSqlConnection : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; $dataSource = new JavaSqlConnection ( jdbc:mysql://server_host/database?user=user password=password , com.mysql.jdbc.Driver ); Tip For convenience you can also use the JdbcDsnFactory to convert database params. ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\DataSource\\Util\\JdbcDsnFactory ; $dbParams = [ driver = mysql , // JDBC driver key. host = localhost , db = my_db , user = user , password = password , // Optional extended options driverOptions = [ serverTimezone = UTC ] ]; $dsn = JdbcDsnFactory :: createDsnFromParams ( $dbParams ); // You should get a jdbc formatted dsn: // jdbc:mysql://localhost/my_db?user=user password=password serverTimezone=UTC // ready to use as $dsn argument for `JdbcDataSource` JsonDataSource Example using JsonDataSource : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JsonDataSource ; $jsonDataSource = new JsonDataSource ( url_or_path /northwind.json ); /* $jsonDataSource- setOptions([ JsonDataSource::PARAM_JSON_DATE_PATTERN = yyyy-MM-dd , JsonDataSource::PARAM_JSON_NUMBER_PATTERN = #,##0.## , JsonDataSource::PARAM_JSON_TIMEZONE_ID = Europe/Brussels , JsonDataSource::PARAM_JSON_LOCALE_CODE = en_US ]); */ $report = new Report ( /path/myreport.jrxml , new ReportParams ([ LOGO_FILE = /path/assets/wave.png , TITLE = My Title ]), $jsonDataSource ); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $this - ba ); $exportManager = $reportRunner - getExportManager ( $report ); $exportManager - savePdf ( /path/my_output.pdf ); XmlDataSource Example using XmlDataSource : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\XmlDataSource ; $xmlDataSource = new XmlDataSource ( url_or_path /northwind.xml ); /* $xmlDataSource- setOptions([ XmlDataSource::PARAM_XML_DATE_PATTERN = yyyy-MM-dd , XmlDataSource::PARAM_XML_NUMBER_PATTERN = #,##0.## , XmlDataSource::PARAM_XML_TIMEZONE_ID = Europe/Brussels , XmlDataSource::PARAM_XML_LOCALE_CODE = en_US ]); */ $report = new Report ( /path/myreport.jrxml , new ReportParams ([ LOGO_FILE = /path/assets/wave.png , TITLE = My Title ]), $xmlDataSource ); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $this - ba ); $exportManager = $reportRunner - getExportManager ( $report ); $exportManager - savePdf ( /path/my_output.pdf );","title":"Datasources"},{"location":"datasources/#datasources","text":"Jasper reports supports multiple datasources for filling the report (see JRApi )","title":"Datasources"},{"location":"datasources/#javasqlconnection","text":"Example using JavaSqlConnection : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; $dataSource = new JavaSqlConnection ( jdbc:mysql://server_host/database?user=user password=password , com.mysql.jdbc.Driver ); Tip For convenience you can also use the JdbcDsnFactory to convert database params. ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\DataSource\\Util\\JdbcDsnFactory ; $dbParams = [ driver = mysql , // JDBC driver key. host = localhost , db = my_db , user = user , password = password , // Optional extended options driverOptions = [ serverTimezone = UTC ] ]; $dsn = JdbcDsnFactory :: createDsnFromParams ( $dbParams ); // You should get a jdbc formatted dsn: // jdbc:mysql://localhost/my_db?user=user password=password serverTimezone=UTC // ready to use as $dsn argument for `JdbcDataSource`","title":"JavaSqlConnection"},{"location":"datasources/#jsondatasource","text":"Example using JsonDataSource : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JsonDataSource ; $jsonDataSource = new JsonDataSource ( url_or_path /northwind.json ); /* $jsonDataSource- setOptions([ JsonDataSource::PARAM_JSON_DATE_PATTERN = yyyy-MM-dd , JsonDataSource::PARAM_JSON_NUMBER_PATTERN = #,##0.## , JsonDataSource::PARAM_JSON_TIMEZONE_ID = Europe/Brussels , JsonDataSource::PARAM_JSON_LOCALE_CODE = en_US ]); */ $report = new Report ( /path/myreport.jrxml , new ReportParams ([ LOGO_FILE = /path/assets/wave.png , TITLE = My Title ]), $jsonDataSource ); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $this - ba ); $exportManager = $reportRunner - getExportManager ( $report ); $exportManager - savePdf ( /path/my_output.pdf );","title":"JsonDataSource"},{"location":"datasources/#xmldatasource","text":"Example using XmlDataSource : ?php declare ( strict_types = 1 ); use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\XmlDataSource ; $xmlDataSource = new XmlDataSource ( url_or_path /northwind.xml ); /* $xmlDataSource- setOptions([ XmlDataSource::PARAM_XML_DATE_PATTERN = yyyy-MM-dd , XmlDataSource::PARAM_XML_NUMBER_PATTERN = #,##0.## , XmlDataSource::PARAM_XML_TIMEZONE_ID = Europe/Brussels , XmlDataSource::PARAM_XML_LOCALE_CODE = en_US ]); */ $report = new Report ( /path/myreport.jrxml , new ReportParams ([ LOGO_FILE = /path/assets/wave.png , TITLE = My Title ]), $xmlDataSource ); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $this - ba ); $exportManager = $reportRunner - getExportManager ( $report ); $exportManager - savePdf ( /path/my_output.pdf );","title":"XmlDataSource"},{"location":"error_management/","text":"Exceptions When running or exporting a report, the following exception can be thrown: Generally at compile time: Exception Description ReportFileNotFoundException When the report file cannot be opened (PHP or Java side, check perms) BrokenXMLReportFileException When the report JRXML file cannot be parsed (xml error) ReportCompileException Compilation error, generally an invalid expression or missing resource JavaProxiedException Exception on the Java side, and call $e- getJvmStackTrace() for debug RuntimeException Normally never thrown, see exception message At filling time: Exception Description BrokenJsonDataSourceException When the json datasource cannot be parsed JavaProxiedException Exception on the Java side, and call $e- getJvmStackTrace() for debug Common errors If you encounter permissions problems (i.e. the pdf are created under tomcat8 user), just add your user to the tomcat group: $ sudo usermod -a -G tomcat group name username Logging You can enable any psr/log compatible logger. Here's a basic example with monolog : ?php use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Monolog\\Logger ; use Monolog\\Handler\\StreamHandler ; $logger = new Logger ( soluble-japha-logger ); $logger - pushHandler ( new StreamHandler ( path/to/your.log , Logger :: WARNING )); $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter , $logger ); $report = new Report ( /path/my_report.jrxml , new ReportParams ()); // Any exception during report compilation, filling or exporting will // be logged ;)","title":"Errors & Logging"},{"location":"error_management/#exceptions","text":"When running or exporting a report, the following exception can be thrown: Generally at compile time: Exception Description ReportFileNotFoundException When the report file cannot be opened (PHP or Java side, check perms) BrokenXMLReportFileException When the report JRXML file cannot be parsed (xml error) ReportCompileException Compilation error, generally an invalid expression or missing resource JavaProxiedException Exception on the Java side, and call $e- getJvmStackTrace() for debug RuntimeException Normally never thrown, see exception message At filling time: Exception Description BrokenJsonDataSourceException When the json datasource cannot be parsed JavaProxiedException Exception on the Java side, and call $e- getJvmStackTrace() for debug","title":"Exceptions"},{"location":"error_management/#common-errors","text":"If you encounter permissions problems (i.e. the pdf are created under tomcat8 user), just add your user to the tomcat group: $ sudo usermod -a -G tomcat group name username","title":"Common errors"},{"location":"error_management/#logging","text":"You can enable any psr/log compatible logger. Here's a basic example with monolog : ?php use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Monolog\\Logger ; use Monolog\\Handler\\StreamHandler ; $logger = new Logger ( soluble-japha-logger ); $logger - pushHandler ( new StreamHandler ( path/to/your.log , Logger :: WARNING )); $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter , $logger ); $report = new Report ( /path/my_report.jrxml , new ReportParams ()); // Any exception during report compilation, filling or exporting will // be logged ;)","title":"Logging"},{"location":"getting_started/","text":"If you're new about Jasper and prefer to evaluate first, just play with Jasperstudio and create one or two reports. Installation PHP $ composer require soluble/jasper Jasperbridge There's an open issue about providing a docker install . We contributors :) Quick start on Ubuntu Xenial with Tomcat8: $ sudo apt install sudo apt install default-jdk tomcat8 Build the war container (war is a phar for the PHP world) # Example based on php-java-bridge master $ git clone https://github.com/belgattitude/php-java-bridge.git $ cd php-java-bridge $ ./gradlew war -I init-scripts/init.jasperreports.gradle -I init-scripts/init.mysql.gradle Deploy on Tomcat (example on ubuntu sudo apt install tomcat8 ) $ sudo cp ./build/libs/JavaBridgeTemplate.war /var/lib/tomcat8/webapps/JasperBridge.war The the address to http://localhost:8080/JasperBridge , you should see the bridge dashboard page: Test Test whether the bridge is working: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter ; $ba = new Adapter ([ driver = Pjb62 , servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); // This should print your JVM version echo $ba - javaClass ( java.lang.System ) - getProperty ( java.version );","title":"Installation"},{"location":"getting_started/#installation","text":"","title":"Installation"},{"location":"getting_started/#php","text":"$ composer require soluble/jasper","title":"PHP"},{"location":"getting_started/#jasperbridge","text":"There's an open issue about providing a docker install . We contributors :) Quick start on Ubuntu Xenial with Tomcat8: $ sudo apt install sudo apt install default-jdk tomcat8 Build the war container (war is a phar for the PHP world) # Example based on php-java-bridge master $ git clone https://github.com/belgattitude/php-java-bridge.git $ cd php-java-bridge $ ./gradlew war -I init-scripts/init.jasperreports.gradle -I init-scripts/init.mysql.gradle Deploy on Tomcat (example on ubuntu sudo apt install tomcat8 ) $ sudo cp ./build/libs/JavaBridgeTemplate.war /var/lib/tomcat8/webapps/JasperBridge.war The the address to http://localhost:8080/JasperBridge , you should see the bridge dashboard page:","title":"Jasperbridge"},{"location":"getting_started/#test","text":"Test whether the bridge is working: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter ; $ba = new Adapter ([ driver = Pjb62 , servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); // This should print your JVM version echo $ba - javaClass ( java.lang.System ) - getProperty ( java.version );","title":"Test"},{"location":"install/","text":"PHP $ composer require soluble/jasper Jasper server Creating the war file # Example based on php-java-bridge master $ git clone https://github.com/belgattitude/php-java-bridge.git $ cd php-java-bridge $ ./gradlew war -I init-scripts/init.jasperreports.gradle -I init-scripts/init.mysql.gradle Deploy Deploy on Tomcat (example on ubuntu) $ sudo cp ./build/libs/JavaBridgeTemplate.war /var/lib/tomcat8/webapps/JasperReports.war Check the bridge Point your browser to http://localhost:8080/JasperReports , you should see the php-java-bridge dashboard page. Test The bridge address can be used in the japha bridge adapter: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter ; $ba = new Adapter ([ driver = Pjb62 , servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); // This should print your JVM version echo $ba - javaClass ( java.lang.System ) - getProperty ( java.version );","title":"Install"},{"location":"install/#php","text":"$ composer require soluble/jasper","title":"PHP"},{"location":"install/#jasper-server","text":"","title":"Jasper server"},{"location":"install/#creating-the-war-file","text":"# Example based on php-java-bridge master $ git clone https://github.com/belgattitude/php-java-bridge.git $ cd php-java-bridge $ ./gradlew war -I init-scripts/init.jasperreports.gradle -I init-scripts/init.mysql.gradle","title":"Creating the war file"},{"location":"install/#deploy","text":"Deploy on Tomcat (example on ubuntu) $ sudo cp ./build/libs/JavaBridgeTemplate.war /var/lib/tomcat8/webapps/JasperReports.war","title":"Deploy"},{"location":"install/#check-the-bridge","text":"Point your browser to http://localhost:8080/JasperReports , you should see the php-java-bridge dashboard page.","title":"Check the bridge"},{"location":"install/#test","text":"The bridge address can be used in the japha bridge adapter: ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter ; $ba = new Adapter ([ driver = Pjb62 , servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); // This should print your JVM version echo $ba - javaClass ( java.lang.System ) - getProperty ( java.version );","title":"Test"},{"location":"usage/","text":"Creating a new report ?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; use Soluble\\Jasper\\Exporter\\PDFExporter ; // Step 1: Get the report runner // Good practice is to initialize once and get it from a PSR-11 compatible container $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter ); // Step 2: Define your report parameters $report = new Report ( /path/my_report.jrxml , new ReportParams ([ BookTitle = Soluble Jasper , BookSubTitle = Generated on JVM with Jasper reports ]), new JavaSqlConnection ( jdbc:mysql://localhost/my_db?user=user password=password , com.mysql.jdbc.Driver ) ); // Step 3: Export the report $pdfExporter = new PDFExporter ( $report , $reportRunner ); $pdfExporter - saveFile ( /path/my_report_output.pdf , [ author = John Doe , title = My document ]); // Or for PSR7 response $response = $pdfExporter - getPsr7Response ([ author = John Doe , title = My document ]); //$exportManager = $reportRunner- getExportManager($report); //$exportManager- savePdf( /path/my_report_output.pdf ); /* $pdfExporter = $exportManager- getPdfExporter(); $pdfExporter- saveFile( /path/my_report_output.pdf ); // Both will need to cache the report $psr7Response = $pdfExporter- getPsr7Response(); $stream = $pdfExporter- getStream(); */ Examples See the test directory: e2e/functional tests examples","title":"Basic usage"},{"location":"usage/#creating-a-new-report","text":"?php declare ( strict_types = 1 ); use Soluble\\Japha\\Bridge\\Adapter as JavaBridgeAdapter ; use Soluble\\Jasper\\ { ReportRunnerFactory , Report , ReportParams }; use Soluble\\Jasper\\DataSource\\JavaSqlConnection ; use Soluble\\Jasper\\Exporter\\PDFExporter ; // Step 1: Get the report runner // Good practice is to initialize once and get it from a PSR-11 compatible container $bridgeAdapter = new JavaBridgeAdapter ([ servlet_address = localhost:8080/JasperReports/servlet.phpjavabridge ]); $reportRunner = ReportRunnerFactory :: getBridgedReportRunner ( $bridgeAdapter ); // Step 2: Define your report parameters $report = new Report ( /path/my_report.jrxml , new ReportParams ([ BookTitle = Soluble Jasper , BookSubTitle = Generated on JVM with Jasper reports ]), new JavaSqlConnection ( jdbc:mysql://localhost/my_db?user=user password=password , com.mysql.jdbc.Driver ) ); // Step 3: Export the report $pdfExporter = new PDFExporter ( $report , $reportRunner ); $pdfExporter - saveFile ( /path/my_report_output.pdf , [ author = John Doe , title = My document ]); // Or for PSR7 response $response = $pdfExporter - getPsr7Response ([ author = John Doe , title = My document ]); //$exportManager = $reportRunner- getExportManager($report); //$exportManager- savePdf( /path/my_report_output.pdf ); /* $pdfExporter = $exportManager- getPdfExporter(); $pdfExporter- saveFile( /path/my_report_output.pdf ); // Both will need to cache the report $psr7Response = $pdfExporter- getPsr7Response(); $stream = $pdfExporter- getStream(); */","title":"Creating a new report"},{"location":"usage/#examples","text":"See the test directory: e2e/functional tests examples","title":"Examples"}]}